//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WMSImportation.svcInvQtyAdj {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjBrwTableset : WMSImportation.svcInvQtyAdj.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTable InventoryQtyAdjBrwField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTable InventoryQtyAdjBrw {
            get {
                return this.InventoryQtyAdjBrwField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryQtyAdjBrwField, value) != true)) {
                    this.InventoryQtyAdjBrwField = value;
                    this.RaisePropertyChanged("InventoryQtyAdjBrw");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : WMSImportation.svcInvQtyAdj.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjTableset : WMSImportation.svcInvQtyAdj.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.InventoryQtyAdjTable InventoryQtyAdjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTable InventoryQtyAdj {
            get {
                return this.InventoryQtyAdjField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryQtyAdjField, value) != true)) {
                    this.InventoryQtyAdjField = value;
                    this.RaisePropertyChanged("InventoryQtyAdj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InventoryQtyAdjTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InventoryQtyAdjRow")]
    [System.SerializableAttribute()]
    public class InventoryQtyAdjTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.InventoryQtyAdjRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.LegalNumGenOptsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.SNFormatRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.SelectedSerialNumbersRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InventoryQtyAdjBrwTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InventoryQtyAdjBrwRow")]
    [System.SerializableAttribute()]
    public class InventoryQtyAdjBrwTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjBrwRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseOnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseOnHandUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonNettableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseBinDescField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseOnHandQty {
            get {
                return this.BaseOnHandQtyField;
            }
            set {
                if ((this.BaseOnHandQtyField.Equals(value) != true)) {
                    this.BaseOnHandQtyField = value;
                    this.RaisePropertyChanged("BaseOnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseOnHandUOM {
            get {
                return this.BaseOnHandUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseOnHandUOMField, value) != true)) {
                    this.BaseOnHandUOMField = value;
                    this.RaisePropertyChanged("BaseOnHandUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonNettable {
            get {
                return this.NonNettableField;
            }
            set {
                if ((this.NonNettableField.Equals(value) != true)) {
                    this.NonNettableField = value;
                    this.RaisePropertyChanged("NonNettable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMCode {
            get {
                return this.StkUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMCodeField, value) != true)) {
                    this.StkUOMCodeField = value;
                    this.RaisePropertyChanged("StkUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMDesc {
            get {
                return this.StkUOMDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMDescField, value) != true)) {
                    this.StkUOMDescField = value;
                    this.RaisePropertyChanged("StkUOMDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseCode {
            get {
                return this.WareHseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseCodeField, value) != true)) {
                    this.WareHseCodeField = value;
                    this.RaisePropertyChanged("WareHseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseBinDesc {
            get {
                return this.WhseBinDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseBinDescField, value) != true)) {
                    this.WhseBinDescField = value;
                    this.RaisePropertyChanged("WhseBinDesc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwRow))]
    public partial class IceRow : WMSImportation.svcInvQtyAdj.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdjustQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowNegQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.InventoryQtyAdjRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHandUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReasonCodeReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialNoQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TempSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitOfMeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseBinDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdjustQuantity {
            get {
                return this.AdjustQuantityField;
            }
            set {
                if ((this.AdjustQuantityField.Equals(value) != true)) {
                    this.AdjustQuantityField = value;
                    this.RaisePropertyChanged("AdjustQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNegQty {
            get {
                return this.AllowNegQtyField;
            }
            set {
                if ((this.AllowNegQtyField.Equals(value) != true)) {
                    this.AllowNegQtyField = value;
                    this.RaisePropertyChanged("AllowNegQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSN {
            get {
                return this.EnableSNField;
            }
            set {
                if ((this.EnableSNField.Equals(value) != true)) {
                    this.EnableSNField = value;
                    this.RaisePropertyChanged("EnableSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHandUOM {
            get {
                return this.OnHandUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandUOMField, value) != true)) {
                    this.OnHandUOMField = value;
                    this.RaisePropertyChanged("OnHandUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDescription {
            get {
                return this.ReasonCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescriptionField, value) != true)) {
                    this.ReasonCodeDescriptionField = value;
                    this.RaisePropertyChanged("ReasonCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReasonCodeReq {
            get {
                return this.ReasonCodeReqField;
            }
            set {
                if ((this.ReasonCodeReqField.Equals(value) != true)) {
                    this.ReasonCodeReqField = value;
                    this.RaisePropertyChanged("ReasonCodeReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonTypeField, value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialNoQty {
            get {
                return this.SerialNoQtyField;
            }
            set {
                if ((this.SerialNoQtyField.Equals(value) != true)) {
                    this.SerialNoQtyField = value;
                    this.RaisePropertyChanged("SerialNoQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMCode {
            get {
                return this.StkUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMCodeField, value) != true)) {
                    this.StkUOMCodeField = value;
                    this.RaisePropertyChanged("StkUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TempSerialNo {
            get {
                return this.TempSerialNoField;
            }
            set {
                if ((this.TempSerialNoField.Equals(value) != true)) {
                    this.TempSerialNoField = value;
                    this.RaisePropertyChanged("TempSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransDate {
            get {
                return this.TransDateField;
            }
            set {
                if ((this.TransDateField.Equals(value) != true)) {
                    this.TransDateField = value;
                    this.RaisePropertyChanged("TransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitOfMeasure {
            get {
                return this.UnitOfMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitOfMeasureField, value) != true)) {
                    this.UnitOfMeasureField = value;
                    this.RaisePropertyChanged("UnitOfMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseCode {
            get {
                return this.WareHseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseCodeField, value) != true)) {
                    this.WareHseCodeField = value;
                    this.RaisePropertyChanged("WareHseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseDescription {
            get {
                return this.WareHseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseDescriptionField, value) != true)) {
                    this.WareHseDescriptionField = value;
                    this.RaisePropertyChanged("WareHseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseBinDescription {
            get {
                return this.WhseBinDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseBinDescriptionField, value) != true)) {
                    this.WhseBinDescriptionField = value;
                    this.RaisePropertyChanged("WhseBinDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : WMSImportation.svcInvQtyAdj.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InventoryQtyAdjBrwRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonNettable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseBinDesc = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseOnHandQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseOnHandUOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InventoryQtyAdjRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdjustQuantity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitOfMeasure = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNoQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TempSerialNo = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeReq = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowNegQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSN = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandUOM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDescription = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseDescription = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseBinDescription = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 35,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:InventoryQtyAdj", ConfigurationName="svcInvQtyAdj.InventoryQtyAdjSvcContract")]
    public interface InventoryQtyAdjSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        bool CheckSN(string partNum, string warehouseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        System.Threading.Tasks.Task<bool> CheckSNAsync(string partNum, string warehouseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset GetInventoryQtyAdj(string partnumber, string uomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset> GetInventoryQtyAdjAsync(string partnumber, string uomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrw", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwResponse GetInventoryQtyAdjBrw(WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrw", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwResponse> GetInventoryQtyAdjBrwAsync(WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.GetPartXRefInfoResponse GetPartXRefInfo(WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetPartXRefInfoResponse> GetPartXRefInfoAsync(WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsEpi" +
            "corFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatus", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="kitMessage")]
        string KitPartStatus(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatus", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="kitMessage")]
        System.Threading.Tasks.Task<string> KitPartStatusAsync(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjResponse PreSetInventoryQtyAdj(WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjResponse> PreSetInventoryQtyAdjAsync(WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjResponse SetInventoryQtyAdj(WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjResponse> SetInventoryQtyAdjAsync(WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.ValidateSNResponse ValidateSN(WMSImportation.svcInvQtyAdj.ValidateSNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.ValidateSNResponse> ValidateSNAsync(WMSImportation.svcInvQtyAdj.ValidateSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.NegativeInventoryTestResponse NegativeInventoryTest(WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.NegativeInventoryTestResponse> NegativeInventoryTestAsync(WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPart", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.FindPartResponse FindPart(WMSImportation.svcInvQtyAdj.FindPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPart", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.FindPartResponse> FindPartAsync(WMSImportation.svcInvQtyAdj.FindPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.GetPartFromRowIDResponse GetPartFromRowID(WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetPartFromRowIDResponse> GetPartFromRowIDAsync(WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOM", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WMSImportation.svcInvQtyAdj.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        WMSImportation.svcInvQtyAdj.ChangeUOMResponse ChangeUOM(WMSImportation.svcInvQtyAdj.ChangeUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOM", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMResponse")]
        System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.ChangeUOMResponse> ChangeUOMAsync(WMSImportation.svcInvQtyAdj.ChangeUOMRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrw", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string wareHouseCode;
        
        public GetInventoryQtyAdjBrwRequest() {
        }
        
        public GetInventoryQtyAdjBrwRequest(string partNum, string wareHouseCode) {
            this.partNum = partNum;
            this.wareHouseCode = wareHouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string primaryBin;
        
        public GetInventoryQtyAdjBrwResponse() {
        }
        
        public GetInventoryQtyAdjBrwResponse(WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwResult, string primaryBin) {
            this.GetInventoryQtyAdjBrwResult = GetInventoryQtyAdjBrwResult;
            this.primaryBin = primaryBin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfo", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartXRefInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string sysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string rowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string uomCode;
        
        public GetPartXRefInfoRequest() {
        }
        
        public GetPartXRefInfoRequest(string partNum, string sysRowID, string rowType, string uomCode) {
            this.partNum = partNum;
            this.sysRowID = sysRowID;
            this.rowType = rowType;
            this.uomCode = uomCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfoResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartXRefInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string serialWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=4)]
        public bool multipleMatch;
        
        public GetPartXRefInfoResponse() {
        }
        
        public GetPartXRefInfoResponse(string partNum, string uomCode, string serialWarning, string questionString, bool multipleMatch) {
            this.partNum = partNum;
            this.uomCode = uomCode;
            this.serialWarning = serialWarning;
            this.questionString = questionString;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreSetInventoryQtyAdj", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class PreSetInventoryQtyAdjRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        public PreSetInventoryQtyAdjRequest() {
        }
        
        public PreSetInventoryQtyAdjRequest(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreSetInventoryQtyAdjResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class PreSetInventoryQtyAdjResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public bool requiresUserInput;
        
        public PreSetInventoryQtyAdjResponse() {
        }
        
        public PreSetInventoryQtyAdjResponse(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds, bool requiresUserInput) {
            this.ds = ds;
            this.requiresUserInput = requiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInventoryQtyAdj", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class SetInventoryQtyAdjRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        public SetInventoryQtyAdjRequest() {
        }
        
        public SetInventoryQtyAdjRequest(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInventoryQtyAdjResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class SetInventoryQtyAdjResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string partTranPKs;
        
        public SetInventoryQtyAdjResponse() {
        }
        
        public SetInventoryQtyAdjResponse(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds, string partTranPKs) {
            this.ds = ds;
            this.partTranPKs = partTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSN", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ValidateSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string serialNumber;
        
        public ValidateSNRequest() {
        }
        
        public ValidateSNRequest(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds, string serialNumber) {
            this.ds = ds;
            this.serialNumber = serialNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ValidateSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public bool isVoided;
        
        public ValidateSNResponse() {
        }
        
        public ValidateSNResponse(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds, bool isVoided) {
            this.ds = ds;
            this.isVoided = isVoided;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTest", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class NegativeInventoryTestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=4)]
        public string pcPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=5)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=6)]
        public int pdDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=7)]
        public decimal ipSellingQuantity;
        
        public NegativeInventoryTestRequest() {
        }
        
        public NegativeInventoryTestRequest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity) {
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcPCID = pcPCID;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
            this.ipSellingQuantity = ipSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTestResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class NegativeInventoryTestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcNeqQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string pcMessage;
        
        public NegativeInventoryTestResponse() {
        }
        
        public NegativeInventoryTestResponse(string pcNeqQtyAction, string pcMessage) {
            this.pcNeqQtyAction = pcNeqQtyAction;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPart", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class FindPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string ipPartNum;
        
        public FindPartRequest() {
        }
        
        public FindPartRequest(string ipPartNum) {
            this.ipPartNum = ipPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPartResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class FindPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string opUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string opMatchType;
        
        public FindPartResponse() {
        }
        
        public FindPartResponse(string opPartNum, string opUOM, string opMatchType) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
            this.opMatchType = opMatchType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowID", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartFromRowIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string ipRowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string ipRowID;
        
        public GetPartFromRowIDRequest() {
        }
        
        public GetPartFromRowIDRequest(string ipRowType, string ipRowID) {
            this.ipRowType = ipRowType;
            this.ipRowID = ipRowID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowIDResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartFromRowIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string opUOM;
        
        public GetPartFromRowIDResponse() {
        }
        
        public GetPartFromRowIDResponse(string opPartNum, string opUOM) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOM", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ChangeUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string UOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        public ChangeUOMRequest() {
        }
        
        public ChangeUOMRequest(string UOM, WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            this.UOM = UOM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ChangeUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds;
        
        public ChangeUOMResponse() {
        }
        
        public ChangeUOMResponse(WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InventoryQtyAdjSvcContractChannel : WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryQtyAdjSvcContractClient : System.ServiceModel.ClientBase<WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract>, WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract {
        
        public InventoryQtyAdjSvcContractClient() {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryQtyAdjSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckSN(string partNum, string warehouseCode) {
            return base.Channel.CheckSN(partNum, warehouseCode);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSNAsync(string partNum, string warehouseCode) {
            return base.Channel.CheckSNAsync(partNum, warehouseCode);
        }
        
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset GetInventoryQtyAdj(string partnumber, string uomCode) {
            return base.Channel.GetInventoryQtyAdj(partnumber, uomCode);
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset> GetInventoryQtyAdjAsync(string partnumber, string uomCode) {
            return base.Channel.GetInventoryQtyAdjAsync(partnumber, uomCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.GetInventoryQtyAdjBrw(WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest request) {
            return base.Channel.GetInventoryQtyAdjBrw(request);
        }
        
        public WMSImportation.svcInvQtyAdj.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrw(string partNum, string wareHouseCode, out string primaryBin) {
            WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest inValue = new WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest();
            inValue.partNum = partNum;
            inValue.wareHouseCode = wareHouseCode;
            WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).GetInventoryQtyAdjBrw(inValue);
            primaryBin = retVal.primaryBin;
            return retVal.GetInventoryQtyAdjBrwResult;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwResponse> GetInventoryQtyAdjBrwAsync(WMSImportation.svcInvQtyAdj.GetInventoryQtyAdjBrwRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.GetPartXRefInfoResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.GetPartXRefInfo(WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfo(request);
        }
        
        public string GetPartXRefInfo(ref string partNum, string sysRowID, string rowType, ref string uomCode, out string questionString, out bool multipleMatch) {
            WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest inValue = new WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest();
            inValue.partNum = partNum;
            inValue.sysRowID = sysRowID;
            inValue.rowType = rowType;
            inValue.uomCode = uomCode;
            WMSImportation.svcInvQtyAdj.GetPartXRefInfoResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).GetPartXRefInfo(inValue);
            partNum = retVal.partNum;
            uomCode = retVal.uomCode;
            questionString = retVal.questionString;
            multipleMatch = retVal.multipleMatch;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetPartXRefInfoResponse> GetPartXRefInfoAsync(WMSImportation.svcInvQtyAdj.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfoAsync(request);
        }
        
        public WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID) {
            return base.Channel.GetSelectSerialNumbersParams(ipCompany, ipWareHseCode, ipPartNum, ipAdjustQuantity, ipBinNum, ipUnitOfMeasure, ipSysRowID);
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(ipCompany, ipWareHseCode, ipPartNum, ipAdjustQuantity, ipBinNum, ipUnitOfMeasure, ipSysRowID);
        }
        
        public string KitPartStatus(string partNum) {
            return base.Channel.KitPartStatus(partNum);
        }
        
        public System.Threading.Tasks.Task<string> KitPartStatusAsync(string partNum) {
            return base.Channel.KitPartStatusAsync(partNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.PreSetInventoryQtyAdj(WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest request) {
            return base.Channel.PreSetInventoryQtyAdj(request);
        }
        
        public bool PreSetInventoryQtyAdj(ref WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest inValue = new WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest();
            inValue.ds = ds;
            WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).PreSetInventoryQtyAdj(inValue);
            ds = retVal.ds;
            return retVal.requiresUserInput;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjResponse> PreSetInventoryQtyAdjAsync(WMSImportation.svcInvQtyAdj.PreSetInventoryQtyAdjRequest request) {
            return base.Channel.PreSetInventoryQtyAdjAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.SetInventoryQtyAdj(WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest request) {
            return base.Channel.SetInventoryQtyAdj(request);
        }
        
        public string SetInventoryQtyAdj(ref WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest inValue = new WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest();
            inValue.ds = ds;
            WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).SetInventoryQtyAdj(inValue);
            ds = retVal.ds;
            return retVal.partTranPKs;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjResponse> SetInventoryQtyAdjAsync(WMSImportation.svcInvQtyAdj.SetInventoryQtyAdjRequest request) {
            return base.Channel.SetInventoryQtyAdjAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.ValidateSNResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.ValidateSN(WMSImportation.svcInvQtyAdj.ValidateSNRequest request) {
            return base.Channel.ValidateSN(request);
        }
        
        public bool ValidateSN(ref WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds, string serialNumber) {
            WMSImportation.svcInvQtyAdj.ValidateSNRequest inValue = new WMSImportation.svcInvQtyAdj.ValidateSNRequest();
            inValue.ds = ds;
            inValue.serialNumber = serialNumber;
            WMSImportation.svcInvQtyAdj.ValidateSNResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).ValidateSN(inValue);
            ds = retVal.ds;
            return retVal.isVoided;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.ValidateSNResponse> ValidateSNAsync(WMSImportation.svcInvQtyAdj.ValidateSNRequest request) {
            return base.Channel.ValidateSNAsync(request);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.NegativeInventoryTestResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.NegativeInventoryTest(WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTest(request);
        }
        
        public string NegativeInventoryTest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity, out string pcMessage) {
            WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest inValue = new WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest();
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcPCID = pcPCID;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            inValue.ipSellingQuantity = ipSellingQuantity;
            WMSImportation.svcInvQtyAdj.NegativeInventoryTestResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).NegativeInventoryTest(inValue);
            pcMessage = retVal.pcMessage;
            return retVal.pcNeqQtyAction;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.NegativeInventoryTestResponse> NegativeInventoryTestAsync(WMSImportation.svcInvQtyAdj.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.FindPartResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.FindPart(WMSImportation.svcInvQtyAdj.FindPartRequest request) {
            return base.Channel.FindPart(request);
        }
        
        public string FindPart(string ipPartNum, out string opUOM, out string opMatchType) {
            WMSImportation.svcInvQtyAdj.FindPartRequest inValue = new WMSImportation.svcInvQtyAdj.FindPartRequest();
            inValue.ipPartNum = ipPartNum;
            WMSImportation.svcInvQtyAdj.FindPartResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).FindPart(inValue);
            opUOM = retVal.opUOM;
            opMatchType = retVal.opMatchType;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.FindPartResponse> FindPartAsync(WMSImportation.svcInvQtyAdj.FindPartRequest request) {
            return base.Channel.FindPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.GetPartFromRowIDResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.GetPartFromRowID(WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowID(request);
        }
        
        public string GetPartFromRowID(string ipRowType, string ipRowID, out string opUOM) {
            WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest inValue = new WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest();
            inValue.ipRowType = ipRowType;
            inValue.ipRowID = ipRowID;
            WMSImportation.svcInvQtyAdj.GetPartFromRowIDResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).GetPartFromRowID(inValue);
            opUOM = retVal.opUOM;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.GetPartFromRowIDResponse> GetPartFromRowIDAsync(WMSImportation.svcInvQtyAdj.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WMSImportation.svcInvQtyAdj.ChangeUOMResponse WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract.ChangeUOM(WMSImportation.svcInvQtyAdj.ChangeUOMRequest request) {
            return base.Channel.ChangeUOM(request);
        }
        
        public void ChangeUOM(string UOM, ref WMSImportation.svcInvQtyAdj.InventoryQtyAdjTableset ds) {
            WMSImportation.svcInvQtyAdj.ChangeUOMRequest inValue = new WMSImportation.svcInvQtyAdj.ChangeUOMRequest();
            inValue.UOM = UOM;
            inValue.ds = ds;
            WMSImportation.svcInvQtyAdj.ChangeUOMResponse retVal = ((WMSImportation.svcInvQtyAdj.InventoryQtyAdjSvcContract)(this)).ChangeUOM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<WMSImportation.svcInvQtyAdj.ChangeUOMResponse> ChangeUOMAsync(WMSImportation.svcInvQtyAdj.ChangeUOMRequest request) {
            return base.Channel.ChangeUOMAsync(request);
        }
    }
}
